     1                                  ;a-(7+x)/(b*b-c/d+2)
     2                                  ;a-doubleword; b,c,d-byte; x-qword
     3                                  ;signed
     4                                  
     5                                  bits 32
     6                                  global start
     7                                  
     8                                  extern exit
     9                                  import exit msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 F4010000                    a dd 500
    13 00000004 0A                          b db 10
    14 00000005 28                          c db 40
    15 00000006 32                          d db 50
    16 00000007 2C01000000000000            x dq 300
    17                                      
    18                                  segment code use32 class=code
    19                                  start:
    20                                      
    21 00000000 A0[05000000]                mov AL, [c] ; AL = c
    22 00000005 B400                        mov AH, 0 ; AL -> AX
    23 00000007 F635[06000000]              div BYTE [d] ; AL = c/d , AH = c%d (keep the integer part only)
    24 0000000D 88C2                        mov DL, AL ; DL = c/d
    25 0000000F A0[04000000]                mov AL, [b] ; AL = b
    26 00000014 F625[04000000]              mul BYTE [b] ; AX = b*b
    27 0000001A B600                        mov DH, 0 ; DL -> DX
    28 0000001C 6629D0                      sub AX, DX ; AX = b*b-c/d
    29 0000001F 6683D002                    adc AX, 2 ; AX = b*b-c/d+2
    30 00000023 BB00000000                  mov EBX, 0 
    31 00000028 6689C3                      mov BX, AX ; EBX = b*b-c/d+2   
    32 0000002B A1[07000000]                mov EAX, dword [x]
    33 00000030 8B15[0B000000]              mov EDX, dword [x+4] ; EAX:EDX = x
    34 00000036 83C007                      add EAX, 7 
    35 00000039 83D200                      adc EDX, 0 ; EDX:EAX = 7+x
    36 0000003C F7F3                        div EBX ; EAX = (7+x)/(b*b-c/d+2) , EDX = (7+x)%(b*b-c/d+2) (keep the integer part only)
    37 0000003E 89C3                        mov EBX, EAX ; EBX = (7+x)/(b*b-c/d+2)
    38 00000040 A1[00000000]                mov EAX, [a] ; EAX = a
    39 00000045 29D8                        sub EAX, EBX ; EAX = a-(7+x)/(b*b-c/d+2)
    40                                      
    41 00000047 6A00                        push dword 0
    42 00000049 FF15[00000000]              call [exit]
