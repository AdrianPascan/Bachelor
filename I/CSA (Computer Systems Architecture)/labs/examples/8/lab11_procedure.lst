     1                                  ; the program calculates and displays the factorial of a number
     2                                  ; the procedure factorial is defined in the code segment of the program
     3                                  bits 32
     4                                  global start
     5                                  
     6                                  extern printf, exit
     7                                  import printf msvcrt.dll
     8                                  import exit msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 666163746F7269616C-     	format_string db "factorial=%d",  10, 13, 0
    11 00000009 3D25640A0D00       
    12                                  
    13                                  segment code use32 class=code
    14                                  ; procedure definition
    15                                  factorial: 
    16 00000000 B801000000              	mov eax, 1
    17 00000005 8B4C2404                	mov ecx, [esp + 4] 
    18                                  	; mov ecx, [esp + 4] read the parameter from the stack
    19                                  	; WARNING!!! The return address is on top of the stack.
    20                                  	; The parameter required by procedure is next to the return address.
    21                                  	; (see the following diagram)
    22                                  	;
    23                                  	; The stack (after the procedure call)
    24                                  	;
    25                                  	;|-------------------|
    26                                  	;|   return address  |  < esp
    27                                  	;|-------------------|
    28                                  	;|     00000006h     |  < esp+4 - the parameter required by the procedure
    29                                  	;|-------------------|
    30                                  	; ....
    31                                  
    32                                  	.repeat: 
    33 00000009 F7E1                    		mul ecx
    34 0000000B E2FC                    	loop .repeat ; the case ecx = 0 is not considered
    35                                  	
    36 0000000D C3                      	ret
    37                                  ; "main" program       
    38                                  start:
    39 0000000E 6A06                    	push dword 6        ; pass the parameter to procedure
    40 00000010 E8EBFFFFFF              	call factorial      ; call the procedure
    41                                  
    42                                  	; display the result
    43 00000015 50                      	push eax
    44 00000016 68[00000000]            	push format_string
    45 0000001B FF15[00000000]          	call [printf]
    46 00000021 83C408                  	add esp, 4*2
    47                                  
    48 00000024 6A00                    	push 0
    49 00000026 FF15[00000000]          	call [exit]
